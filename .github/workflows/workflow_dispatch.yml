name: CI
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        options:
          - dev1
          - qa1
          - stg1
          - trn1
      applications:
        required: true
      credential:
        required: true
        
jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - name: validate user input
        run: |
          re="[[:space:]]+"
          if [[${{ github.event.inputs.applications }} =~ $re ]]; then
            echo "Input for applications variable is formatted incorrectly. Seperate application names with a comma only: contact,case,operations"
            exit 255
          fi  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: create_input_artifacts
        id: "create_input_artifacts"
        run: |
          mkdir -p artifacts
          echo "env:${{ inputs.environment }}" > ./artifacts/artifact_inputs
          echo "applications:${{ inputs.applications }}" >> ./artifacts/artifact_inputs
      - uses: actions/upload-artifact@v3
        with:
          name: artifact_inputs
          path: ./artifacts/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.NONPROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.NONPROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 
          
      - name: perform_validations
        run: |
          chmod 700 bin/validate_credential_update_inputs.sh
          bin/validate_credential_update_inputs.sh -e ${{ inputs.environment }} -a ${{ inputs.applications }} -c ${{ inputs.credential }}
          
      # Runs a single command using the runners shell
      - name: stop_ecs
        id: "stop_ecs"
        run: |
          chmod 700 bin/update_ecs_desired_count.sh
          bin/update_ecs_desired_count.sh -e ${{ inputs.environment }} -a ${{ inputs.applications }} -m reduce

      # Runs a single command using the runners shell
      - name: manual_intervention
        id: "manual_intervention"
        run: |
          echo "Manual Intervention"
          chmod 700 ./bin/manual_intervention.sh
          ./bin/manual_intervention.sh -g "${{ github.token }}" -t "${{ github.actor }}"
          
      # Runs a single command using the runners shell
      - name: update_ssm_parameters
        id: "update_ssm_parameters"
        run: |
          chmod 700 bin/update_ssm_credential.sh
          bin/update_ssm_credential.sh -e ${{ inputs.environment }} -a ${{ inputs.applications }} -c ${{ inputs.credential }} -v ${{ secrets.CREDENTIAL_TO_UPDATE_VALUE}}
          
      # Runs a single command using the runners shell
      - name: restore_ecs
        id: "restore_ecs"
        run: |
          bin/update_ecs_desired_count.sh -e ${{ inputs.environment }} -a ${{ inputs.applications }} -m return
